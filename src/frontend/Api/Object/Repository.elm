-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Repository exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


name : SelectionSet String Api.Object.Repository
name =
    Object.selectionForField "String" "name" [] Decode.string


owner : SelectionSet decodesTo Api.Object.Organization -> SelectionSet decodesTo Api.Object.Repository
owner object_ =
    Object.selectionForCompositeField "owner" [] object_ identity


type alias CompareRequiredArguments =
    { base : String
    , head : String
    }


compare : CompareRequiredArguments -> SelectionSet decodesTo Api.Object.Diff -> SelectionSet decodesTo Api.Object.Repository
compare requiredArgs object_ =
    Object.selectionForCompositeField "compare" [ Argument.required "base" requiredArgs.base Encode.string, Argument.required "head" requiredArgs.head Encode.string ] object_ identity
